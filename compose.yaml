services:

  composer:
    container_name: composer
    build:
      context: ./composer
      dockerfile: Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION:-}
        COMPOSER_VERSION: ${COMPOSER_VERSION:+ --version=${COMPOSER_VERSION}}
        LARAVEL_VERSION: ${LARAVEL_VERSION:+:${LARAVEL_VERSION}}
    user: ${CUID:-0}:${CGID:-0}
    environment:
      TZ: ${TZ}
    profiles:
      - create-project
      - delete-development-environment
    volumes:
      - type: bind
        source: .
        target: /app
    networks:
      - laravel-development

  artisan:
    container_name: artisan
    build:
      context: ./artisan
      dockerfile: Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION:+${PHP_VERSION}-}
    user: ${CUID:-0}:${CGID:-0}
    restart: unless-stopped
    depends_on:
      composer:
        condition: service_completed_successfully
        required: false
    volumes:
      - type: bind
        source: ./laravel-development
        target: /app
    networks:
      - laravel-development

  nginx:
    container_name: nginx
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - php-fpm
    volumes:
      - type: bind
        source: ./nginx/conf.d
        target: /etc/nginx/conf.d
    networks:
      - laravel-development

  php-fpm:
    container_name: php-fpm
    build:
      context: ./php-fpm
      dockerfile: Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION:+${PHP_VERSION}-}
        XDEBUG_VERSION: ${XDEBUG_VERSION:+-${XDEBUG_VERSION}}
    user: ${CUID:-0}:${CGID:-0}
    restart: unless-stopped
    environment:
      PHP_IDE_CONFIG: "serverName=${IDE_SERVER_NAME:-laravel-development-in-docker}"
    depends_on:
      composer:
        condition: service_completed_successfully
        required: false
    volumes:
      - type: bind
        source: ./laravel-development
        target: /app
      - type: bind
        source: ./xdebug/xdebug.ini
        target: /usr/local/etc/php/conf.d/xdebug.ini
      - type: bind
        source: ./xdebug/logs
        target: /xdebug-logs
    networks:
      - laravel-development
    extra_hosts:
      host.docker.internal: host-gateway

  mysql:
    container_name: mysql
    image: mysql:latest
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql-root-password
      MYSQL_DATABASE: laravel
      TZ: ${TZ}
    secrets:
      - mysql-root-password
    volumes:
      - laravel-development-mysql-data:/var/lib/mysql
    networks:
      - laravel-development

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:latest
    restart: unless-stopped
    ports:
      - "8090:80"
    environment:
      PMA_HOST: mysql
      TZ: ${TZ}
    depends_on:
      - mysql
    networks:
      - laravel-development

  production:
    build:
      context: .
      dockerfile: ./build-app/production.Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION:+${PHP_VERSION}-}
    profiles:
      - production

  stand-alone:
    build:
      context: .
      dockerfile: ./build-app/stand-alone.Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION:+${PHP_VERSION}-}
    profiles:
      - stand-alone

secrets:
  mysql-root-password:
    file: ./secrets/mysql_root_password.txt

volumes:
  laravel-development-mysql-data:
    name: laravel-development-mysql-data

networks:
  laravel-development:
    name: laravel-development
    driver: bridge